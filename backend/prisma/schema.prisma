// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  username String
  passwordHash String @map("password_hash")

  chats ChatUser[]
  messages Message[]
  ownedGroups GroupChat[]
  messageReads MessageRead[]

  @@map("users")
}

enum ChatType {
  DIRECT
  GROUP
}

model Chat {
  id String @id @default(uuid())
  type ChatType

  createdAt DateTime @default(now()) @map("created_at")

  chatUsers ChatUser[]
  group GroupChat?
  messages Message[]

  @@map("chats")
}

enum GroupType {
  GLOBAL
  PRIVATE
}

model GroupChat {
  id String @id @default(uuid())
  title String
  chatId String @unique() @map("chat_id")
  groupType GroupType @map("group_type")

  createdByUserId String? @map("created_by_user_id")

  chat Chat @relation(fields: [chatId], references: [id])
  createdByUser User? @relation(fields: [createdByUserId], references: [id])

  @@map("group_chats")
}

model ChatUser {
  chatId String @map("chat_id")
  userId String @map("user_id")
  joinedAt DateTime @default(now()) @map("join_at")

  chat Chat @relation(fields: [chatId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@id([chatId, userId])
  @@map("chat_users")
}

model Message {
  id String @id @default(uuid())
  content String
  chatId String @map("chat_id")
  userId String @map("user_id")
  sentAt DateTime @default(now()) @map("sent_at")

  chat Chat @relation(fields: [chatId], references: [id])
  user User @relation(fields: [userId], references: [id])
  messageReads MessageRead[]

  @@map("messages")
}

model MessageRead {
  messageId String @map("message_id")
  userId String @map("user_id")
  readAt DateTime @map("read_at")

  message Message @relation(fields: [messageId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@id([messageId, userId])
  @@map("message_reads")
}
